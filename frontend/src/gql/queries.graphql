query GetProject {
  getProject {
    user {
      id
      email
      name
      lastProjectId
    }
    project {
      id
      name
    }
    nodes {
      ...Node
    }
    values {
      ...Value
    }
    nodeSettings {
      ...NodeSettings
    }
  }
}

fragment Value on Value {
      id
      node_id
      order
      value
      list_path
      updated_at
}

fragment Node on Node {
  id
  name
  order
  type
  parent_id
}

fragment NodeSettings on NodeSettings {
  id
  node_id
  settings
}

subscription NodesUpdated {
  nodesUpdated
}

query GetNodes {
  getNodes {
    ...Node
  }
}

mutation InsertNode($data: InsertNode!, $settings: JSONObject) {
  insertNode(data: $data, settings: $settings) {
    id
  }
}

mutation UpdateNode($data: ChangeNodeInput!) {
  updateNode(data: $data)
}

mutation DeleteNodeById($order: Int!, $parent_id: Int!, $id: Int!) {
  deleteNodeById(order: $order, parent_id: $parent_id, id: $id)
}

query GetNodeSttings {
  getNodeSettings {
    id
    settings
    node_id
  }
}

mutation UpsertNodeSettings($data: UpsertNodeSettings!) {
  upsertNodeSettings(data: $data)
}

subscription NodeSettingsUpdated {
  nodeSettingsUpdated
}


mutation Register($data: Registration!) {
  register(data: $data)
}

mutation Login($data: Login!) {
  login(data: $data) {
    token
    expiresDate
  }
}

mutation Logout {
  logout
}

subscription ValuesUpdated {
  valuesUpdated {
    ...Value
  }
}

query GetValues($data: GetValues!) {
  getValues(data: $data) {
    ...Value
  }
}

mutation InsertListItem($listItem: InsertListItem!) {
  insertListItem(listItem: $listItem)
}

mutation DeleteListItem($id: Int!) {
  deleteListItem(id: $id)
}

mutation UpsertValue($data: UpsertValue!) {
  upsertValue(data: $data)
}

mutation ImportArray($data: JsonArrayImportInput!) {
  importArray(data: $data)
}

mutation TruncateList($data: TruncateValue!) {
  truncate(data: $data)
}

mutation UploadUrl($filename: String!) {
  uploadUrl(filename: $filename) {
    signedUrl
    object
  }
}

query GetListItems($request: ListRequest!) {
  getListItems(request: $request) {
    id
    node_id
    value
    order
    list_path
    updated_at
    children {
      ...Value
    }
  }
}

query GetListColumns($node_id: Int!) {
  getListColumns(node_id: $node_id) {
    ...Node
  }
}

query GetApiKeys {
  getApiKeys {
    name
    key
    is_active
    created_at
    expires_at
    last_used
  }
}

subscription ApiKeysUpdated {
  apiKeysUpdated
}
