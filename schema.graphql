type Query {
  nodes: [Node!]!
}

type Node {
  id: ID!
  name: String!
  order: Int!
  nodes: [Node!]!
  type: NodeType!
  editor: EditorType!
  parent: Node
}

enum NodeType {
  object
  string
  number
  boolean
  list
  date
  schema
}

enum EditorType {
  select
  radios
  multiselect
  input
  password
  email
  switch
  textarea
  richtext
}

type Mutation {
  insertNode(data: InsertNode!): Int!
  changeNodeName(data: ChangeNodeNameInput!): Boolean!
  deleteNodeById(id: ID!): Boolean!
}

input InsertNode {
  name: String!
  order: Int!
  type: NodeType!
  editor: EditorType!
  parent_id: ID
}

input ChangeNodeNameInput {
  id: ID!
  name: String!
}